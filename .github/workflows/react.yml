# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Use Node.js 16.x
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: npm install, build
    - run: |
        npm install
        npm run build
    - name: run Lighthouse CI
    - run: |
        npm install -g @lhci/cli@0.8.x
        lhci autorun
    
    - name: Checkout
      uses: actions/checkout@v3
    - name: Cypress run
      uses: cypress-io/github-action@v5
    - run: npx cypress run
    
    - name: Install dependencies
      run: yarn
    - name: Test and coverage
      run: yarn jest --coverage
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    - uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: cezarpop/pakketmanagementrepo
        tags: frontend
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
